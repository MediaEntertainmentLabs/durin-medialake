{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "sku": {
            "type": "string",
            "allowedValues": [
                "F1",
                "D1",
                "B1",
                "B2",
                "B3",
                "S1"
            ],
            "defaultValue": "F1",
            "metadata": {
                "description": "The pricing tier for the hosting plan."
            }
        },
        "repoURL": {
            "type": "string",
            "defaultValue": "https://github.com/Azure-Samples/azure-event-grid-viewer.git",
            "metadata": {
                "description": "The URL for the GitHub repository that contains the project to deploy."
            }
        },
        "branch": {
            "type": "string",
            "defaultValue": "master",
            "metadata": {
                "description": "The branch of the GitHub repository to use."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "blobStorageName": {
            "type": "string",
            "metadata": {
                "description": "blob storage name media storage"
            }
        },
        "durinTopicWebhookAppName": {
            "type": "string",
            "metadata": {
                "description": "description"
            }
        }
    },
    "functions": [],
    "variables": {
        "storageTopic": "[concat(parameters('blobStorageName'),'-topic')]",
        "uniqueName": "[concat('durinmedia',uniqueString(resourceGroup().id))]",
        "appHostingPlanName": "[take(concat('webhook-plan-', variables('uniqueName')), 40)]"
    },
    "resources": [
        {
            "apiVersion": "2019-08-01",
            "name": "[variables('appHostingPlanName')]",
            "type": "Microsoft.Web/serverfarms",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[parameters('sku')]",
                "capacity": 0
            },
            "properties": {
                "name": "[variables('appHostingPlanName')]"
            }
        },
        {
            "apiVersion": "2019-08-01",
            "name": "[parameters('durinTopicWebhookAppName')]",
            "type": "Microsoft.Web/sites",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('appHostingPlanName'))]"
            ],
            "properties": {
                "serverFarmId": "[variables('appHostingPlanName')]",
                "siteConfig": {
                    "webSocketsEnabled": true
                }
            },
            "resources": [
                {
                    "apiVersion": "2019-08-01",
                    "name": "web",
                    "type": "sourcecontrols",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/Sites', parameters('durinTopicWebhookAppName'))]"
                    ],
                    "properties": {
                        "RepoUrl": "[parameters('repoURL')]",
                        "branch": "[parameters('branch')]",
                        "IsManualIntegration": true
                    }
                }
            ]
        },
        {
            "type": "Microsoft.EventGrid/systemTopics",
            "apiVersion": "2020-04-01-preview",
            "name": "[variables('storageTopic')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "source": "[concat(subscription().id,'/resourceGroups/',resourceGroup().name,'/providers/Microsoft.Storage/storageAccounts/',parameters('blobStorageName'))]",
                "topicType": "microsoft.storage.storageaccounts"
            }
        },
        {
            "type": "Microsoft.EventGrid/systemTopics/eventSubscriptions",
            "apiVersion": "2020-04-01-preview",
            "name": "[concat(variables('storageTopic'),'/' ,'logicappsubscribe')]",
            "dependsOn": [
                "[resourceId('Microsoft.EventGrid/systemTopics', variables('storageTopic'))]",
                "[resourceId('Microsoft.Web/sites/sourcecontrols', parameters('durinTopicWebhookAppName'), 'web')]"
            ],
            "properties": {
                "destination": {
                    "properties": {
                        "maxEventsPerBatch": 1,
                        "preferredBatchSizeInKilobytes": 64,
                        "endpointUrl": "[concat('https://', reference(resourceId('Microsoft.Web/sites',parameters('durinTopicWebhookAppName'))).defaultHostName, '/api/updates')]"
                    },
                    "endpointType": "WebHook"
                },
                "filter": {
                    "includedEventTypes": [
                        "Microsoft.Storage.BlobCreated"
                    ]
                },
                "eventDeliverySchema": "EventGridSchema",
                "retryPolicy": {
                    "maxDeliveryAttempts": 30,
                    "eventTimeToLiveInMinutes": 1440
                }
            }
        },
        {
            "name": "azureeventgrid",
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "location": "[resourceGroup().location]",
            "tags": {
            },
            "properties": {
                "displayName": "azureeventgrid",
                "parameterValues": {
                },
                "customParameterValues": {
                },
                "nonSecretParameterValues": {
                },
                "api": {
                    "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azureeventgrid')]"
                }
            }
        }
    ],
    "outputs": {}
}