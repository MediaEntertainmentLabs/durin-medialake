{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "connection_commondataservice": {
      "type": "string",
      "defaultValue": "[concat(subscription().id,'/resourceGroups/',resourceGroup().name,'/providers/Microsoft.Web/connections/commondataservice')]"
    },
    "sites_MediaLakeFunction": {
      "defaultValue": "[concat(subscription().id,'/resourceGroups/',resourceGroup().name,'/providers/Microsoft.Web/sites/',toLower(take(concat('func-', concat('durinmedia',uniqueString(resourceGroup().id))), 60)))]",
      "type": "String"
    },
    "crmOrgName": {
      "type": "string",
      "metadata": {
        "description": "description"
      }
    },
    "crmIdentifier": {
      "type": "string",
      "metadata": {
        "description": "description"
      }
    }
  },
  "functions": [
    {
      "namespace": "durin",
      "members": {
        "wrapInQuote": {
          "parameters": [
            {
              "name": "text",
              "type": "string"
            }
          ],
          "output": {
            "value": "[concat('''', parameters('text'),'''')]",
            "type": "string"
          }
        }
      }
    }
  ],
  "variables": {
    "org": "[durin.wrapInQuote(concat(parameters('crmOrgName'),'.',parameters('crmIdentifier')))]"
  },
  "resources": [
    {
      "name": "Logic-CreateShowContainer",
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2017-07-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "definition": {
          "$schema": "https://schema.management.azure.com/schemas/2016-06-01/Microsoft.Logic.json",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            }
          },
          "triggers": {
            "When_a_record_is_created": {
              "type": "ApiConnectionWebhook",
              "inputs": {
                "body": {
                  "NotificationUrl": "@{listCallbackUrl()}"
                },
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['commondataservice']['connectionId']"
                  }
                },
                "path": "[concat('/datasets/@{encodeURIComponent(encodeURIComponent(',variables('org'),'))}/tables/@{encodeURIComponent(encodeURIComponent(',durin.wrapInQuote('media_assetcontainers'),'))}/onnewitemswebhook')]",
                "queries": {
                  "scope": "Organization"
                                }
                            },
                            "runtimeConfiguration": {
                                "secureData": {
                                    "properties": [
                                        "inputs",
                                        "outputs"
                                    ]
                }
              }
            }
          },
          "actions": {
            "Compose": {
              "runAfter": {},
              "type": "Compose",
              "inputs": {
                "name": "@{triggerBody()?['media_name']}",
                "type": "show"
                            },
                            "runtimeConfiguration": {
                                "secureData": {
                                    "properties": [
                                        "inputs"
                                    ]
                                }
              }
            },
            "Create_Show_Container": {
              "runAfter": {
                "Compose": [
                  "Succeeded"
                ]
              },
              "type": "Function",
              "inputs": {
                "body": "@outputs('Compose')",
                "function": {
                  "id": "[concat(parameters('sites_MediaLakeFunction'), '/functions/CreateShowContainer')]"
                                }
                            },
                            "runtimeConfiguration": {
                                "secureData": {
                                    "properties": [
                                        "inputs",
                                        "outputs"
                                    ]
                }
              }
            },
            "Create_error_log_record": {
              "runAfter": {
                "Create_Show_Container": [
                  "Failed",
                  "TimedOut"
                ]
              },
              "type": "ApiConnection",
              "inputs": {
                "body": {
                  "_media_assetcontainer_value": "@triggerBody()?['media_assetcontainerid']",
                  "media_name": "Failed to create Show container @{triggerBody()?['media_name']}"
                },
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['commondataservice']['connectionId']"
                  }
                },
                "method": "post",
                "path": "[concat('/v2/datasets/@{encodeURIComponent(encodeURIComponent(',variables('org'),'))}/tables/@{encodeURIComponent(encodeURIComponent(',durin.wrapInQuote('media_asseterrorlogs'),'))}/items')]"
                            },
                            "runtimeConfiguration": {
                                "secureData": {
                                    "properties": [
                                        "inputs",
                                        "outputs"
                                    ]
                                }
              }
            },
            "Response_failure": {
              "runAfter": {
                "Create_error_log_record": [
                  "Succeeded"
                ]
              },
              "type": "Response",
              "kind": "Http",
              "inputs": {
                "body": {
                  "Message": "Failed to create Show container"
                },
                "statusCode": 500
                            },
                            "runtimeConfiguration": {
                                "secureData": {
                                    "properties": [
                                        "inputs"
                                    ]
                                }
              }
            },
            "Response_success": {
              "runAfter": {
                "Update_a_record": [
                  "Succeeded"
                ]
              },
              "type": "Response",
              "kind": "Http",
              "inputs": {
                "body": {
                  "Message": "Show container created successfully"
                },
                "statusCode": 200
                            },
                            "runtimeConfiguration": {
                                "secureData": {
                                    "properties": [
                                        "inputs"
                                    ]
                                }
              }
            },
            "Update_a_record": {
              "runAfter": {
                "Create_Show_Container": [
                  "Succeeded"
                ]
              },
              "type": "ApiConnection",
              "inputs": {
                "body": {
                  "media_containerpath": "@{body('Create_Show_Container')}"
                },
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['commondataservice']['connectionId']"
                  }
                },
                "method": "patch",
                "path": "[concat('/v2/datasets/@{encodeURIComponent(encodeURIComponent(',variables('org'),'))}/tables/@{encodeURIComponent(encodeURIComponent(',durin.wrapInQuote('media_assetcontainers'),'))}/items/@{encodeURIComponent(encodeURIComponent(triggerBody()?[',durin.wrapInQuote('media_assetcontainerid'),']))}')]"
                            },
                            "runtimeConfiguration": {
                                "secureData": {
                                    "properties": [
                                        "inputs",
                                        "outputs"
                                    ]
                                }
              }
            }
          },
          "outputs": {}
        },
        "parameters": {
          "$connections": {
            "value": {
              "commondataservice": {
                "connectionId": "[parameters('connection_commondataservice')]",
                "connectionName": "commondataservice",
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/commondataservice')]"
              }
            }
          }
        }
      }
    }
  ]
}